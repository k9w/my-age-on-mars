This plaintext document outlines my thought process while designing
this application.


Expected input:

 - userAge

 - lifeExpectancy

 - planetChosen


Expected output:

For the chosen planet's years, show:

 - convertedAge

 - yearsRemaining or yearsPastExpectancy



Define a class object AgeCalculator with the following properties.

 - Convert userAge in Earth years to number of the chosen planet's
   years.

 - Show in that planet's years how many years the user has left to
   live or has lived past their life expectancy. The number of years
   should be positive.


Here's how it would look:

function AgeCalculator(userAge, lifeExpectancy, planetChosen);

AgeCalculator.prototype methods:

convert the two functions below into prototype methods of class
AgeCalculator once they are tested working.

let userAge = 35;
let lifeExpectancy = 100;
let planetChosen = 'mercury';

function convertYears(planetChosen) {
  let yearConversion
  switch (planetChosen) {
    case ("mercury"):
      yearConversion = 0.24;
      break;
    case ("venus"):
     yearConversion = 0.62;
      break;
    case ("mars"):
      yearConversion = 1.88;
      break;
    case ("jupiter"):
      yearConversion = 11.86;
      break;
    default:
      alert("No planet chosen.");
    }
    // console.log("year conversion is " + yearConversion);
}


// console.log(convertYears(planetChosen));  -- says 'undefined' in console

function yearsRemainingOrPastExpectancy(userAge, lifeExpectancy, planetChosen) {
  let yearsLeftOrPast = (lifeExpectancy - userAge)
  let convertedYearsLeftOrPast = yearsLeftOrPast * convertYears(planetChosen);
  console.log(yearsLeftOrPast);
}

yearsRemainingOrPastExpectancy(userAge, lifeExpectancy, planetChosen);




Once the above code is working, plan out what part of it to test for
and write in the project first and in what order for one test to pass
at a time.

